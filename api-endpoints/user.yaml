openapi: 3.0.0
info:
  title: MaduChat API - User Endpoints
  version: 1.3.0
  contact: 
    name: Madu-de
    url: https://github.com/Madu-de
    email: kontakt.madu@gmail.com
  license: 
    name: GNU Affero General Public License v3.0
    url: https://www.gnu.org/licenses/agpl-3.0.de.html
servers:
  - url: http://localhost:3000
    description: Nest.js local server
components: 
  securitySchemes: 
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  /users:
    get:
      operationId: get-users-like
      security: 
        - JWT: []
      summary: Get Users like
      description: Returns all users which includes the "like" parameter 
      parameters:
        - name: like
          in: query
          required: true
          description: Chars contained in username or name of users
          schema:
            type: string
        - name: friends
          in: query
          required: false
          description: Get friend data too
          schema:
            type: boolean
        - name: chats
          in: query
          required: false
          description: Get chats too
          schema:
            type: boolean
        - name: settings
          in: query
          required: false
          description: Get settings too
          schema:
            type: boolean
        - name: reviews
          in: query
          required: false
          description: Get writtenReviews, recievedReviews and reviewStats too
          schema:
            type: boolean
      responses:
        '200':    # status code
          description: OK
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    id: 
                      type: string
                      example: a0f22b2e-a038-4f11-a8f1-6f5f3474fa7d
                    email:
                      type: string
                      example: madu@example.com
                    name:
                      type: string
                      example: Madu
                    username: 
                      type: string
                      example: madu
        '400':
          description: Parameter 'like' is required
        '401':
          description: Unauthorized
  /users/{id}:
    get:
      operationId: get-user
      security: 
        - JWT: []
      summary: Get User
      description: Returns the user with the given id or the authenticated user
      parameters:
        - name: id
          in: path
          required: true
          description: User id
          schema:
            type: string
        - name: friends
          in: query
          required: false
          description: Get friend data too
          schema:
            type: boolean
        - name: chats
          in: query
          required: false
          description: Get chats too
          schema:
            type: boolean
        - name: settings
          in: query
          required: false
          description: Get settings too
          schema:
            type: boolean
        - name: reviews
          in: query
          required: false
          description: Get writtenReviews, recievedReviews and reviewStats too
          schema:
            type: boolean
      responses:
        '200':    # status code
          description: OK
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  id: 
                    type: string
                    example: a0f22b2e-a038-4f11-a8f1-6f5f3474fa7d
                  email:
                    type: string
                    example: madu@example.com
                  name:
                    type: string
                    example: Madu
                  username: 
                    type: string
                    example: madu
        '400':
          description: User not found
        '401':
          description: Unauthorized